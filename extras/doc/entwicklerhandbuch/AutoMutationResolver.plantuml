' Preview durch <Alt>d

@startuml Controller-Klasse

interface Promise<T>

package @nestjs/graphql {
  class "@Resolver" as Resolver
  hide Resolver circle

  class "@UseGuards" as UseGuards
  hide UseGuards circle

  class "@UseInterceptors" as UseInterceptors
  hide UseInterceptors circle

  class "@Mutation" as Mutation
  hide Mutation circle

  class "@Args" as Args
  hide Args circle
}

package security.auth {
  class "type Role = 'ADMIN' | 'MITARBEITER' | 'KUNDE'" as Role
  hide Role circle

  class "@Roles" as Roles
  hide Roles circle

  Roles .right.> Role
}

package auto #DDDDDD {
  package entity #FFFFFF {
    class Auto <<entity>>
  }

  package service #FFFFFF {
    class AutoWriteService << control >>
  }

  class "type AutoDTO = Omit<Auto, 'aktualisiert' | 'erzeugt' | 'fahrzeugklassen'> & { fahrzeugklassen: string[] }" as AutoDTO
  hide AutoDTO circle

  class AutoMutationResolver << control >> << @Resolver() >> << @UseGuards() >> << @UseInterceptors() >> {
    + @Mutation() @Roles() async create(@Args() auto: Auto): Promise<string>
    + @Mutation() @Roles() async update(@Args() auto: AutoDTO): Promise<number>
    + @Mutation() @Roles() async delete(@Args() id: string): Promise<boolean>
  }

  AutoMutationResolver o-down-> "1" AutoWriteService : service

  AutoMutationResolver ..> Auto
  AutoMutationResolver ..> AutoDTO
  AutoDTO .up.> Auto
  AutoMutationResolver ..> Promise
  AutoMutationResolver ..> Resolver

  AutoMutationResolver .up.> Roles
  AutoMutationResolver .up.> Role

  AutoDTO .[hidden].> Promise
  AutoDTO .[hidden].> Resolver
}

hide empty members

@enduml
