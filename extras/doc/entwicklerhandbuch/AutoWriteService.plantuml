' Preview durch <Alt>d

@startuml Anwendungskern

interface Promise<T>

package @nestjs/common {
  class "@Injectable" as Injectable
  hide Injectable circle
}

package typeorm {
  class Repository<T>
}

package @nestjs/typeorm {
  class "@InjectRepository" as InjectRepository
  hide InjectRepository circle
}

package auto {
  package entity {
    class Auto
  }

  package service #DDDDDD {
    class AutoInvalid
    class MarkeExists
    class VersionInvalid
    class VersionOutdated

    class AutoWriteService << control >> <<@Injectable()>> {
      + async create(auto: Auto): Promise<string|AutoInvalid|MarkeExists>
      + async update(id: string, auto: Auto, version: string): Promise<number|AutoInvalid|MarkeExists|VersionInvalid|VersionOutdated>
      + async delete(id: string): Promise<boolean>
    }

    AutoWriteService o--> "1" AutoValidationService: validationService
    AutoWriteService o--> "1" AutoReadService: readService
    AutoWriteService o--> "1" Repository: @InjectRepository repo

    AutoWriteService .up.> Injectable
    AutoWriteService .up.> InjectRepository

    AutoWriteService .up.> Promise
    AutoWriteService ..> Auto
    AutoWriteService .up.> AutoInvalid
    AutoWriteService .up.> MarkeExists
    AutoWriteService .up.> VersionInvalid
    AutoWriteService .up.> VersionOutdated

    AutoInvalid .up[hidden].> Auto
    Auto .up[hidden].> Promise
    Auto .up[hidden].> Injectable
    Auto .up[hidden].> InjectRepository
    MarkeExists .up[hidden].> Auto
    AutoValidationService .[hidden].> Repository
  }
}

hide empty members

footer (c) JÃ¼rgen Zimmermann

@enduml
