schema {
  query: Query
  mutation: Mutation
}

"Funktionen, um Autodaten zu lesen"
type Query {
  autos(marke: String): [Auto!]

  auto(id: ID!): Auto
}

"Funktionen, um Autos neu anzulegen, zu aktualisieren oder zu löschen"
type Mutation {
  create(input: AutoInput!): String

  update(input: AutoUpdateInput!): Int

  delete(id: ID!): Boolean
}

"Datenschema zu einem Auto, das gelesen wird"
type Auto {
  id: ID
  version: Int
  marke: String
  typ: Typ
  preis: Float
  lieferbar: Boolean
  rabatt: Float
  datum: String
  fahrzeugklassen: [String]
}

enum Typ {
  ELEKTRO
  KRAFTSTOFF
}

"Daten für ein neues Auto"
input AutoInput {
  marke: String
  typ: Typ
  preis: Float
  lieferbar: Boolean
  rabatt: Float
  datum: String
  fahrzeugklassen: [String]
}

"Daten für ein zu änderndes Auto"
input AutoUpdateInput {
  id: ID
  version: Int
  marke: String
  typ: Typ
  preis: Float
  lieferbar: Boolean
  rabatt: Float
  datum: String
  fahrzeugklassen: [String]
}
